Introduction:
+ Dota 2, a renowned online multiplayer game, presents an intricate environment with varying factors like hero selection and equipment.
+ The unpredictability of win/loss outcomes demands advanced predictive models to understand gaming dynamics.
+ A comprehensive approach utilizing machine learning models such as Deep Neural Networks (DNNs), Random Forest, Logistic Regression, and XGBoost has been deployed.
+ The research aims to forecast game outcomes over different time intervals (5, 10, 15, 20, 25, 30 minutes), analyzing the impact of equipment and hero choice.
+ This investigation contributes to gaming strategy optimization and extends to broader applications in AI and data science.

Experiment:
1. Establish baseline performances for models without in-game items. Models include DNN, Random Forest, Logistic Regression, XGBoost.
2. Analyze game data across intervals of 5, 10, 15, 20, 25, and 30 minutes, focusing on variables like hero selection and equipment.
3. Investigate correlations between hero equipment and predictive success, emphasizing systematic accuracy increases.

Background Theory:
+ Machine Learning Models (Deep Neural Networks, Random Forest, Logistic Regression, XGBoost).
+ Game Theory and Dota 2 Dynamics.
+ Statistical Methods for Predictive Analysis.

Result:
Figure1. The accuracy progression of DNN model over different time intervals.
The growth in accuracy culminates in 79.77% at the 30-minute interval, outperforming other models.

Figure2. Comparative accuracy of various models at the 25-minute mark.
The DNN model exhibits superiority with 72.39% accuracy, confirming its efficiency.

Figure3. Correlation between hero equipment and prediction success.
A systematic trend of increased accuracy across different intervals is evident.

Conclusion:
+ The research has successfully employed a suite of machine learning models to forecast win/loss outcomes in Dota 2, highlighting the dominance of DNNs.
+ A foundational analysis set the stage for understanding the nuanced relationship between time, equipment, and predictive success, with progressive enhancement observed.
+ Insights into the correlation between hero equipment and predictive accuracy demonstrate the versatile applications of machine learning beyond gaming.
+ This pioneering exploration advances knowledge in gaming strategy optimization, AI-driven game development, and the synergy of human and machine intelligence, aligning with the burgeoning interest in AI within digital entertainment.




Objective:
This study aims to forecast win/loss outcomes in the popular online multiplayer game, Dota 2, using various machine learning models such as Deep Neural Networks (DNNs), Random Forest, Logistic Regression, and XGBoost. The project seeks to analyze the predictive power of these models in relation to hero selection, equipment, and discrete time intervals during the game.

Objective:
This study aims to utilize machine learning models, including Deep Neural Networks (DNNs), Random Forest, Logistic Regression, and XGBoost, to forecast win/loss outcomes in Dota 2. The analysis considers factors such as hero selection, equipment, and time intervals during the game.

Introduction:
+ Dota 2 is a highly competitive online multiplayer game where strategy and decision-making play vital roles in winning.
+ Traditional analytical methods struggle to capture the intricate dynamics and variables of the game.
+ Machine learning models, including DNNs, offer a promising approach to understand and predict game outcomes.
+ The complex relationship between time, equipment, hero selection, and win/loss predictions is a relatively unexplored area.
+ This study strives to provide insights into the predictive modelling of game outcomes using various machine learning techniques, emphasizing the potential applications not only in gaming but also in broader AI applications.

Experiment:
1. Establish baseline performances of DNN, Random Forest, Logistic Regression, and XGBoost models without considering in-game items. Analysis at intervals: 5, 10, 15, 20, 25, and 30 minutes.
2. Analyze the impact of time, hero selection, and equipment on predictive success.
3. Comparative analysis of different models across various timeframes.
4. Investigation of correlations between hero equipment and predictive success.
Figure1. Comparative performance of different models at various intervals.
Figure2. Accuracy enhancement in the DNN model at successive time intervals.

Background Theory:
+ Machine Learning Algorithms (Deep Neural Networks, Random Forest, Logistic Regression, XGBoost).
+ Predictive Analytics.
+ Gaming Strategies and Dynamics.

Result:
Figure3. The accuracy growth of DNN across the time intervals, achieving 79.77% at the 30-minute mark.
Figure4. Comparative accuracy of DNN at the 25-minute interval, showcasing 72.39% accuracy.
Figure5. Correlations between hero equipment and predictive success, emphasizing the systematic increase in accuracy.

Conclusion:
+ A comprehensive investigation into the predictive modelling of Dota 2 outcomes was conducted, employing various machine learning models.
+ Deep Neural Networks consistently outperformed other models, reaching an accuracy of 79.77% at the 30-minute interval.
+ A nuanced understanding of the relationship between time, equipment, and prediction accuracy was achieved.
+ This study extends beyond gaming, showcasing the versatile applications of machine learning, and offering insights for future research in gaming strategy optimization, AI-driven game development, and the fusion of human and machine intelligence.
+ The findings align with the growing integration of AI within the digital entertainment industry, delivering both theoretical advancements and practical implications for the field.


1.通过OpenDota API获取从2023年4月19日到2023年6月29日共6026场公开的职业比赛的，matchid，通过matchid获取每场比赛的详细数据，包括比赛开始时间，英雄选择，出装时间，比赛名称，选手id等信息。
2.剔除训练模型不需要的id，名称等信息，保留英雄选择，出装时间。通过出装时间计算出比赛开始，5分钟，10分钟，20分钟，25分钟，30分钟，35分钟以及最终各个英雄的装备情况，分别保存为csv文件。
3.将各个csv文件进行one-hot encoding，方便模型进行读取训练。
4.分别建立DNN，Random_Forest，Logistic_Regression以及XGBoost模型，分别使用各个csv进行训练，并记录精确度，进行对比。
5.提高csv中装备信息的权重为初始的2倍，再次进行训练并进行对比。
6.计算DNN模型的AUC分数并画出ROC曲线进行对比。

Figure1.各个模型精确度对比
Figure2.提高装备权重后的精确度对比
Figure3.DNN模型的architecture
Figure4.DNN模型的ROC曲线对比


This is the method part of the UK Master's thesis poster:
Method
 Acquire the match details of 6026 public professional games between April 19, 2023, and June 29, 2023, through the OpenDota API. Utilize the match IDs to obtain comprehensive data for each match, including the game start time, hero selections, item acquisition times, match name, player IDs, and related information.
 Eliminate non-essential attributes such as IDs and names, focusing exclusively on hero selection and item acquisition times. Compute the equipment state at the start of the match, as well as at 5, 10, 20, 25, 30, and 35 minutes, and at the match conclusion for each hero. Save these distinct stages as separate CSV files.
 Perform one-hot encoding on the CSV files to enable streamlined model training through effective data representation.
 Independently construct Deep Neural Network (DNN), Random Forest, Logistic Regression, and XGBoost models. Engage in training with the CSV files for each model, recording the accuracy, and conducting comparative analysis.
Figure 1: Architecture of the DNN Model
5. Enhance the weight of the equipment information in the CSV by two-fold and retrain the models, comparing the new results.
6. Calculate the Area Under the Curve (AUC) score for the DNN model and construct a Receiver Operating Characteristic (ROC) curve for comparative evaluation.
Figure 2: Comparative Analysis of Model Accuracy
Figure 3: Accuracy Comparison Following Equipment Weight Amplification

accroding to the following result, write a result part for this poster:
dataset, model, accuracy, AUC
no_items, DNN, 0.5422885417938232, 0.5572589562140646
no_items, Random_Forest, 0.5331858407079646, None
no_items, Logistic_Regression, 0.5353982300884956, None
no_items, XGBoost, 0.5293141592920354, None
5_min, DNN, 0.5754560828208923, 0.5968791463954002
5_min, Random_Forest, 0.5464601769911505, None
5_min, Logistic_Regression, 0.5586283185840708, None
5_min, XGBoost, 0.5453539823008849, None
10_min, DNN, 0.5613598823547363, 0.606015037593985
10_min, Random_Forest, 0.5525442477876106, None
10_min, Logistic_Regression, 0.5824115044247787, None
10_min, XGBoost, 0.5536504424778761, None
15_min, DNN, 0.6310116052627563, 0.6835553958425475
15_min, Random_Forest, 0.5636061946902655, None
15_min, Logistic_Regression, 0.6238938053097345, None
15_min, XGBoost, 0.5801991150442478, None
20_min, DNN, 0.6815920472145081, 0.7511222910216719
20_min, Random_Forest, 0.6028761061946902, None
20_min, Logistic_Regression, 0.6498893805309734, None
20_min, XGBoost, 0.6139380530973452, None
25_min, DNN, 0.7321724891662598, 0.8123396727111898
25_min, Random_Forest, 0.6576327433628318, None
25_min, Logistic_Regression, 0.7184734513274337, None
25_min, XGBoost, 0.6698008849557522, None
30_min, DNN, 0.7985074520111084, 0.8846776868642192
30_min, Random_Forest, 0.6963495575221239, None
30_min, Logistic_Regression, 0.7820796460176991, None
30_min, XGBoost, 0.7278761061946902, None
35_min, DNN, 0.8383084535598755, 0.9199966828836799
35_min, Random_Forest, 0.7201327433628318, None
35_min, Logistic_Regression, 0.8263274336283186, None
35_min, XGBoost, 0.7754424778761062, None
full, DNN, 0.9029850959777832, 0.9680147058823529
full, Random_Forest, 0.7765486725663717, None
full, Logistic_Regression, 0.8926991150442478, None
full, XGBoost, 0.8368362831858407, None

Certainly! Here's a version that would be more suitable for a UK Master's thesis poster:

1. **Data Collection**: Utilise the OpenDota API to extract 6026 professional game matches between April 19 and June 29, 2023, focusing on parameters such as start time, hero selections, and item timings.
2. **Preprocessing**: Isolate relevant features, compute equipment states at predefined intervals, and organise the data into distinct CSV files.
3. **Encoding**: Implement one-hot encoding to prepare the CSV files for effective machine learning model training.
4. **Model Training**: Independently construct and train Deep Neural Network (DNN), Random Forest, Logistic Regression, and XGBoost models. Document accuracy for comparative analysis.
5. **Weight Adjustment**: Increase the significance of equipment information within the CSV files by two-fold, and reassess the models.
6. **Evaluation**: Specifically for the DNN model, calculate the Area Under the Curve (AUC) score and design a Receiver Operating Characteristic (ROC) curve for a comprehensive evaluation.

This version attempts to convey the methodological approach in a more academic and formal tone, befitting the context of a UK Master's thesis poster.
